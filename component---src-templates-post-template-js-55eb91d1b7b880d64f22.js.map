{"version":3,"sources":["webpack:///./src/components/Article/Bodytext.js","webpack:///./src/components/AsyncComponent/AsyncComponent.js","webpack:///./src/components/Post/Meta.js","webpack:///./src/components/Post/Author.js","webpack:///./src/components/Post/Comments.js","webpack:///./src/components/Post/NextPrev.js","webpack:///./src/components/Post/Post.js","webpack:///./src/templates/PostTemplate.js"],"names":["Bodytext","props","html","theme","Fragment","className","dangerouslySetInnerHTML","__html","asyncComponent","getComponent","loadingComponent","state","component","componentDidMount","this","then","setState","render","Comp","React","Component","Meta","prefix","authorName","author","category","to","split","join","Author","note","src","config","gravatarImgMd5","avatar","alt","siteTitle","Comments","facebook","slug","id","NextPrev","next","fields","nextPrefix","nextSlug","frontmatter","nextTitle","title","prev","prevPrefix","prevSlug","prevTitle","Share","module","default","catch","error","Post","post","authornote","nextPost","prevPost","Headline","PostTemplate","data","authorNote","site","siteMetadata","pageContext","Consumer","Article","Seo","postQuery"],"mappings":"8FAAA,yBAmBeA,IAhBE,SAAAC,GAAU,IACjBC,EAAgBD,EAAhBC,KAAgBD,EAAVE,MAEd,OACE,kBAAC,IAAMC,SAAP,KACE,yBAAKC,UAAU,WAAWC,wBAAyB,CAAEC,OAAQL,Q,oGCepDM,MArBf,SAAwBC,EAAcC,GACpC,mB,QAAA,wIACEC,MAAQ,CAAEC,UAAW,MADvB,E,EAAA,G,EAAA,G,6EAAA,2BAGEC,kBAAA,WAAqB,IAAD,OACbC,KAAKH,MAAMC,WACdH,IAAeM,MAAK,SAAAH,GAClB,EAAKI,SAAS,CAAEJ,kBANxB,EAUEK,OAAA,WAAU,IACWC,EAASJ,KAAKH,MAAzBC,UACR,OAAIM,EACK,kBAACA,EAASJ,KAAKb,OAEjBS,GAAsC,4CAfjD,GAAoCS,IAAMC,Y,gDC+B7BC,EA7BF,SAAApB,GAAU,IACbqB,EAAgDrB,EAAhDqB,OAAgBC,EAAgCtB,EAAxCuB,OAAoBC,EAAoBxB,EAApBwB,SAAoBxB,EAAVE,MAE9C,OACE,uBAAGE,UAAU,QACX,8BACIiB,GAEJ,8BACIC,GAEHE,GACC,8BAEE,kBAAC,OAAD,CAAMC,GAAE,aAAeD,EAASE,MAAM,KAAKC,KAAK,MAASH,M,0CCWpDI,EAxBA,SAAA5B,GAAU,IACf6B,EAAgB7B,EAAhB6B,KAAgB7B,EAAVE,MAEd,OACE,kBAAC,IAAMC,SAAP,KACE,yBAAKC,UAAU,UACb,yBAAKA,UAAU,UACb,yBACE0B,IAA8B,IAAzBC,IAAOC,eAAuBC,IAASF,IAAOC,eACnDE,IAAKH,IAAOI,aAGhB,yBAAK/B,UAAU,OAAOC,wBAAyB,CAAEC,OAAQuB,QCOlDO,EAnBE,SAAApC,GACmBA,EAA1BqC,SAA0BrC,EAAhBsC,KAAgBtC,EAAVE,MAExB,OACE,kBAAC,IAAMC,SAAP,KACE,yBAAKoC,GAAG,gBAAgBnC,UAAU,eCuCzBoC,EA5CE,SAAAxC,GAWXA,EATFE,MAFuB,IAAD,EAWpBF,EARFyC,KAHsB,gBAMlB,GANkB,GAIpBC,OAAkBC,GAJE,aAI6B,GAJ7B,GAIVtB,OAA0BuB,EAJhB,EAIUN,KAJV,IAKpBO,YAAsBC,GALF,aAKgB,GALhB,GAKLC,MALK,EAWpB/C,EAJFgD,KAPsB,gBAUlB,GAVkB,GAQpBN,OAAkBO,GARE,aAQ6B,GAR7B,GAQV5B,OAA0B6B,EARhB,EAQUZ,KARV,IASpBO,YAAsBM,GATF,aASgB,GAThB,GASLJ,MAInB,OACE,kBAAC,IAAM5C,SAAP,KACE,yBAAKC,UAAU,SACZwC,GACC,kBAAC,OAAD,CAAMnB,GAAImB,GAER,4BACGE,EADH,IACc,8BAAOH,EAAP,OAIjBO,GACC,kBAAC,OAAD,CAAMzB,GAAIyB,GAER,4BACGC,EADH,IACc,8BAAOF,QCtB3BG,EAAQ7C,GAAe,kBAC3B,kCACGO,MAAK,SAAAuC,GACJ,OAAOA,EAAOC,WAEfC,OAAM,SAAAC,UA4CIC,EAzCF,SAAAzD,GAAU,IAEnB0D,EAWE1D,EAXF0D,KAFkB,EAahB1D,EAVF0D,KACEzD,EAJgB,EAIhBA,KAJgB,IAKhByC,OAAUrB,EALM,EAKNA,OAAQiB,EALF,EAKEA,KALF,IAMhBO,YAAeE,EANC,EAMDA,MAAOxB,EANN,EAMMA,OAAQC,EANd,EAMcA,SAEhCmC,EAKE3D,EALF2D,WACAtB,EAIErC,EAJFqC,SACMuB,EAGJ5D,EAHFyC,KACMoB,EAEJ7D,EAFFgD,KACA9C,EACEF,EADFE,MAGF,OACE,kBAAC,IAAMC,SAAP,KACE,gCACE,kBAAC2D,EAAA,EAAD,CAAUf,MAAOA,EAAO7C,MAAOA,IAC/B,kBAAC,EAAD,CAAMmB,OAAQA,EAAQE,OAAQA,EAAQC,SAAUA,EAAUtB,MAAOA,KAEnE,kBAACH,EAAA,EAAD,CAAUE,KAAMA,EAAMC,MAAOA,IAC7B,gCACE,kBAACkD,EAAD,CAAOM,KAAMA,EAAMxD,MAAOA,IAC1B,kBAAC,EAAD,CAAQ2B,KAAM8B,EAAYzD,MAAOA,IACjC,kBAAC,EAAD,CAAUuC,KAAMmB,EAAUZ,KAAMa,EAAU3D,MAAOA,IACjD,kBAAC,EAAD,CAAUoC,KAAMA,EAAMD,SAAUA,EAAUnC,MAAOA,O,YC7CzD,0CA+Ce6D,UAvCM,SAAA/D,GAAU,IAAD,EAUxBA,EARFgE,KACEN,EAHwB,EAGxBA,KACoBO,EAJI,EAIxBN,WAAc1D,KAEIoC,EANM,EAKxB6B,KACEC,aAAgB9B,SANM,EAUxBrC,EADFoE,YAAe3B,EATW,EASXA,KAAMO,EATK,EASLA,KAGvB,OACE,kBAAC,IAAM7C,SAAP,KACE,kBAAC,eAAakE,SAAd,MACG,SAAAnE,GAAK,OACJ,kBAACoE,EAAA,EAAD,CAASpE,MAAOA,GACd,kBAAC,EAAD,CACEwD,KAAMA,EACNjB,KAAMA,EACNO,KAAMA,EACNW,WAAYM,EACZ5B,SAAUA,EACVnC,MAAOA,QAMf,kBAACqE,EAAA,EAAD,CAAKP,KAAMN,EAAMrB,SAAUA,MA7BjC,IA0CamC,EAAS","file":"component---src-templates-post-template-js-55eb91d1b7b880d64f22.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Bodytext = props => {\n  const { html, theme } = props;\n\n  return (\n    <React.Fragment>\n      <div className=\"bodytext\" dangerouslySetInnerHTML={{ __html: html }} />\n\n    </React.Fragment>\n  );\n};\n\nBodytext.propTypes = {\n  html: PropTypes.string.isRequired,\n  theme: PropTypes.object.isRequired\n};\n\nexport default Bodytext;\n","import React from \"react\";\n\nfunction asyncComponent(getComponent, loadingComponent) {\n  return class AsyncComponent extends React.Component {\n    state = { component: null };\n\n    componentDidMount() {\n      if (!this.state.component) {\n        getComponent().then(component => {\n          this.setState({ component });\n        });\n      }\n    }\n    render() {\n      const { component: Comp } = this.state;\n      if (Comp) {\n        return <Comp {...this.props} />;\n      }\n      return loadingComponent ? loadingComponent : <div>Loading...</div>;\n    }\n  };\n}\n\nexport default asyncComponent;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"gatsby\";\n\n\nconst Meta = props => {\n  const { prefix, author: authorName, category, theme } = props;\n\n  return (\n    <p className=\"meta\">\n      <span>\n         {prefix}\n      </span>\n      <span>\n         {authorName}\n      </span>\n      {category && (\n        <span>\n          \n          <Link to={`/category/${category.split(\" \").join(\"-\")}`}>{category}</Link>\n        </span>\n      )}\n\n    </p>\n  );\n};\n\nMeta.propTypes = {\n  prefix: PropTypes.string.isRequired,\n  author: PropTypes.string.isRequired,\n  category: PropTypes.string,\n  theme: PropTypes.object.isRequired\n};\n\nexport default Meta;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport config from \"../../../content/meta/config\";\nimport avatar from \"../../images/jpg/avatar.jpg\";\n\nconst Author = props => {\n  const { note, theme } = props;\n\n  return (\n    <React.Fragment>\n      <div className=\"author\">\n        <div className=\"avatar\">\n          <img\n            src={config.gravatarImgMd5 == \"\" ? avatar : config.gravatarImgMd5}\n            alt={config.siteTitle}\n          />\n        </div>\n        <div className=\"note\" dangerouslySetInnerHTML={{ __html: note }} />\n      </div>\n\n    </React.Fragment>\n  );\n};\n\nAuthor.propTypes = {\n  note: PropTypes.string.isRequired,\n  theme: PropTypes.object.isRequired\n};\n\nexport default Author;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\n\nimport config from \"../../../content/meta/config\";\n\nconst Comments = props => {\n  const { facebook, slug, theme } = props;\n\n  return (\n    <React.Fragment>\n      <div id=\"post-comments\" className=\"comments\">\n        \n      </div>\n\n    </React.Fragment>\n  );\n};\n\nComments.propTypes = {\n  slug: PropTypes.string.isRequired,\n  facebook: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired\n};\n\nexport default Comments;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"gatsby\";\n\n\n\nconst NextPrev = props => {\n  const {\n    theme,\n    next: {\n      fields: { prefix: nextPrefix, slug: nextSlug } = {},\n      frontmatter: { title: nextTitle } = {}\n    } = {},\n    prev: {\n      fields: { prefix: prevPrefix, slug: prevSlug } = {},\n      frontmatter: { title: prevTitle } = {}\n    } = {}\n  } = props;\n\n  return (\n    <React.Fragment>\n      <div className=\"links\">\n        {nextSlug && (\n          <Link to={nextSlug}>\n            \n            <h4>\n              {nextTitle} <time>{nextPrefix} </time>\n            </h4>\n          </Link>\n        )}\n        {prevSlug && (\n          <Link to={prevSlug}>\n            \n            <h4>\n              {prevTitle} <time>{prevPrefix}</time>\n            </h4>\n          </Link>\n        )}\n      </div>\n\n    </React.Fragment>\n  );\n};\n\nNextPrev.propTypes = {\n  next: PropTypes.object,\n  prev: PropTypes.object,\n  theme: PropTypes.object.isRequired\n};\n\nexport default NextPrev;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"prismjs/themes/prism-okaidia.css\";\n\nimport asyncComponent from \"../AsyncComponent\";\nimport Headline from \"../Article/Headline\";\nimport Bodytext from \"../Article/Bodytext\";\nimport Meta from \"./Meta\";\nimport Author from \"./Author\";\nimport Comments from \"./Comments\";\nimport NextPrev from \"./NextPrev\";\n\nconst Share = asyncComponent(() =>\n  import(\"./Share\")\n    .then(module => {\n      return module.default;\n    })\n    .catch(error => {})\n);\n\nconst Post = props => {\n  const {\n    post,\n    post: {\n      html,\n      fields: { prefix, slug },\n      frontmatter: { title, author, category }\n    },\n    authornote,\n    facebook,\n    next: nextPost,\n    prev: prevPost,\n    theme\n  } = props;\n\n  return (\n    <React.Fragment>\n      <header>\n        <Headline title={title} theme={theme} />\n        <Meta prefix={prefix} author={author} category={category} theme={theme} />\n      </header>\n      <Bodytext html={html} theme={theme} />\n      <footer>\n        <Share post={post} theme={theme} />\n        <Author note={authornote} theme={theme} />\n        <NextPrev next={nextPost} prev={prevPost} theme={theme} />\n        <Comments slug={slug} facebook={facebook} theme={theme} />\n      </footer>\n    </React.Fragment>\n  );\n};\n\nPost.propTypes = {\n  post: PropTypes.object.isRequired,\n  authornote: PropTypes.string.isRequired,\n  facebook: PropTypes.object.isRequired,\n  next: PropTypes.object,\n  prev: PropTypes.object,\n  theme: PropTypes.object.isRequired\n};\n\nexport default Post;\n","import PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { graphql } from \"gatsby\";\n\nimport Seo from \"../components/Seo\";\nimport Article from \"../components/Article\";\nimport Post from \"../components/Post\";\nimport { ThemeContext } from \"../layouts\";\n\nconst PostTemplate = props => {\n  const {\n    data: {\n      post,\n      authornote: { html: authorNote },\n      site: {\n        siteMetadata: { facebook }\n      }\n    },\n    pageContext: { next, prev }\n  } = props;\n\n  return (\n    <React.Fragment>\n      <ThemeContext.Consumer>\n        {theme => (\n          <Article theme={theme}>\n            <Post\n              post={post}\n              next={next}\n              prev={prev}\n              authornote={authorNote}\n              facebook={facebook}\n              theme={theme}\n            />\n          </Article>\n        )}\n      </ThemeContext.Consumer>\n\n      <Seo data={post} facebook={facebook} />\n    </React.Fragment>\n  );\n};\n\nPostTemplate.propTypes = {\n  data: PropTypes.object.isRequired,\n  pageContext: PropTypes.object.isRequired\n};\n\nexport default PostTemplate;\n\n//eslint-disable-next-line no-undef\nexport const postQuery = graphql`\n  query PostBySlug($slug: String!) {\n    post: markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      html\n      fields {\n        slug\n        prefix\n      }\n      frontmatter {\n        title\n        author\n        category\n        cover {\n          childImageSharp {\n            resize(width: 300) {\n              src\n            }\n          }\n        }\n      }\n    }\n    authornote: markdownRemark(fileAbsolutePath: { regex: \"/author/\" }) {\n      id\n      html\n    }\n    site {\n      siteMetadata {\n        facebook {\n          appId\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}
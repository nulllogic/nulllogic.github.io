{"version":3,"sources":["webpack:///./src/components/List/List.js","webpack:///./src/components/List/index.js","webpack:///./src/pages/category.js"],"names":["List","props","edges","theme","Fragment","map","edge","node","title","frontmatter","slug","fields","key","to","CategoryPage","data","posts","facebook","site","siteMetadata","categories","forEach","category","push","categoryList","Consumer","item","query"],"mappings":"gIAmCeA,EA/BF,SAAAC,GAAU,IACbC,EAAiBD,EAAjBC,MAAiBD,EAAVE,MAEf,OACE,kBAAC,IAAMC,SAAP,KACE,4BACGF,EAAMG,KAAI,SAAAC,GAAS,IAAD,EAMbA,EAJFC,KACiBC,EAHF,EAGbC,YAAeD,MACLE,EAJG,EAIbC,OAAUD,KAId,OACE,wBAAIE,IAAKF,GACP,kBAAC,OAAD,CAAMG,GAAIH,GAAOF,UCpB/B,mC,kCCEA,kIAuEeM,UA/DM,SAAAb,GAAU,IAAD,EAQxBA,EANFc,KACkBC,EAHQ,EAGxBA,MAASd,MAESe,EALM,EAIxBC,KACEC,aAAgBF,SAMhBG,EAAa,GACnBJ,EAAMK,SAAQ,SAAAf,GAAS,IAGFgB,EAEfhB,EAHFC,KACEE,YAAea,SAIfA,GAAwB,MAAZA,IACTF,EAAWE,KACdF,EAAWE,GAAY,IAEzBF,EAAWE,GAAUC,KAAKjB,OAI9B,IAAMkB,EAAe,GAErB,IAAK,IAAIZ,KAAOQ,EACdI,EAAaD,KAAK,CAACX,EAAKQ,EAAWR,KAGrC,OACE,kBAAC,IAAMR,SAAP,KACE,kBAAC,eAAaqB,SAAd,MACG,SAAAtB,GAAK,OACJ,kBAAC,IAAD,CAASA,MAAOA,GACd,gCACE,kBAAC,IAAD,CAAUK,MAAM,sBAAsBL,MAAOA,KAE9CqB,EAAanB,KAAI,SAAAqB,GAAI,OACpB,6BAASd,IAAKc,EAAK,IACjB,4BACIA,EAAK,IAET,kBAAC,IAAD,CAAMxB,MAAOwB,EAAK,GAAIvB,MAAOA,YAQvC,kBAAC,IAAD,CAAKc,SAAUA,MAYd,IAAMU,EAAK","file":"component---src-pages-category-js-09f9a6de788a84e63e76.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"gatsby\";\n\nconst List = props => {\n  const { edges, theme } = props;\n\n  return (\n    <React.Fragment>\n      <ul>\n        {edges.map(edge => {\n          const {\n            node: {\n              frontmatter: { title },\n              fields: { slug }\n            }\n          } = edge;\n\n          return (\n            <li key={slug}>\n              <Link to={slug}>{title}</Link>\n            </li>\n          );\n        })}\n      </ul>\n\n    </React.Fragment>\n  );\n};\n\nList.propTypes = {\n  edges: PropTypes.array.isRequired,\n  theme: PropTypes.object.isRequired\n};\n\nexport default List;\n","export { default } from \"./List\";\n","\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { graphql } from \"gatsby\";\nimport { ThemeContext } from \"../layouts\";\nimport Article from \"../components/Article/\";\nimport Headline from \"../components/Article/Headline\";\nimport List from \"../components/List\";\nimport Seo from \"../components/Seo\";\n\nconst CategoryPage = props => {\n  const {\n    data: {\n      posts: { edges: posts },\n      site: {\n        siteMetadata: { facebook }\n      }\n    }\n  } = props;\n\n  // Create category list\n  const categories = {};\n  posts.forEach(edge => {\n    const {\n      node: {\n        frontmatter: { category }\n      }\n    } = edge;\n\n    if (category && category != null) {\n      if (!categories[category]) {\n        categories[category] = [];\n      }\n      categories[category].push(edge);\n    }\n  });\n\n  const categoryList = [];\n\n  for (var key in categories) {\n    categoryList.push([key, categories[key]]);\n  }\n\n  return (\n    <React.Fragment>\n      <ThemeContext.Consumer>\n        {theme => (\n          <Article theme={theme}>\n            <header>\n              <Headline title=\"Posts by categories\" theme={theme} />\n            </header>\n            {categoryList.map(item => (\n              <section key={item[0]}>\n                <h2>\n                   {item[0]}\n                </h2>\n                <List edges={item[1]} theme={theme} />\n              </section>\n            ))}\n            \n          </Article>\n        )}\n      </ThemeContext.Consumer>\n\n      <Seo facebook={facebook} />\n    </React.Fragment>\n  );\n};\n\nCategoryPage.propTypes = {\n  data: PropTypes.object.isRequired\n};\n\nexport default CategoryPage;\n\n//eslint-disable-next-line no-undef\nexport const query = graphql`\n  query PostsQuery {\n    posts: allMarkdownRemark(\n      filter: { fileAbsolutePath: { regex: \"//posts/[0-9]+.*--/\" } }\n      sort: { fields: [fields___prefix], order: DESC }\n    ) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n            prefix\n          }\n          frontmatter {\n            title\n            category\n            author\n            cover {\n              children {\n                ... on ImageSharp {\n                  fluid(maxWidth: 800, maxHeight: 360) {\n                    ...GatsbyImageSharpFluid_withWebp\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        facebook {\n          appId\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}